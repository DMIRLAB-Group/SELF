{
    "collab_server" : "",
    "contents" : "library(self)\nlibrary(bnlearn)\nsetwd(\"~/zhengproj/R/Project/zheng_project\")\n#source(\"function.R\")\ndf1=expand.grid(samplesize=4000,dim=c(20,30,40,50,60),indegree=1.5)\ndf2=expand.grid(samplesize=c(1000,2000,4000,6000,8000),dim=40,indegree=1.5)\ndf3=expand.grid(samplesize=4000,dim=40,indegree=c(0.5,1,1.5,2,2.5))\ndf=rbind(df1,df2,df3)\nresult<-data.frame()\n\n#nonlinear\nfor(j in 2:10){\n  for(i in 11:15){\n  set.seed(j)\n  G=randomGraph(dim=df$dim[i],indegree=df$indegree[i])\n  data=synthetic_data_nonlinear(G,df$samplesize[i])\n  file=sprintf(\"exp_random_nl_size%d_dim%d_indegree%g\",df$samplesize[i],df$dim[i],df$indegree[i])\n  fitG<-fhc(D=data,min_increase = 0.02,gamma = 10,save_model=F ,nthread=3,topk=100)\n  term=data.frame(df[i,],indicators(fitG,G),type=\"nonlinear\",method=\"SELF\")\n  result=rbind(result,term)\n  print(result)\n  }\n}\n\n#linear\nfor(j in 1:10){\n    for(i in 11:15){\n    set.seed(j)\n    G=randomGraph(dim=df$dim[i],indegree=df$indegree[i])\n    data=synthetic_data_linear(G,df$samplesize[i],rate=1)\n    fitG<-fhc(D=data,min_increase = 0.01,alpha=20,lambda=10,booster = \"gblinear\",save_model =F,nthread=3)\n    term=data.frame(df[i,],indicators(fitG,G),type=\"linear\",method=\"SELF2\")\n    result=rbind(result,term)\n    print(result)\n  }\n}\ndata.table::fwrite(result,\"df3.csv\")\n\nfor(j in 2:4){\n  for(i in 1:15){\n    set.seed(j)\n    G=randomGraph(dim=df$dim[i],indegree=df$indegree[i])\n    data=synthetic_data_linear(G,df$samplesize[i],rate=1)\n    fitG<-fhc(D=data,min_increase = 0.01,alpha=20,lambda=10,booster = \"gblinear\",save_model =F,nthread=3,topk=5)\n    term=data.frame(df[i,],indicators(fitG,G),type=\"linear\",method=\"SELF\",topk=5)\n    result=rbind(result,term)\n    print(result)\n\n    fitG<-fhc(D=data,min_increase = 0.01,alpha=20,lambda=10,booster = \"gblinear\",save_model =F,nthread=3,topk=10)\n    term=data.frame(df[i,],indicators(fitG,G),type=\"linear\",method=\"SELF\",topk=10)\n    result=rbind(result,term)\n    print(result)\n  }\n}\n\nfor(j in 2:4){\n  for(i in 1:15){\n    set.seed(j)\n    G=randomGraph(dim=df$dim[i],indegree=df$indegree[i])\n    data=synthetic_data_nonlinear(G,df$samplesize[i],rate=1)\n    fitG<-fhc(D=data,min_increase = 0.02,gamma=10,save_model =F,nthread=3,topk=5)\n    term=data.frame(df[i,],indicators(fitG,G),type=\"nonlinear\",method=\"SELF\",topk=5)\n    result=rbind(result,term)\n    print(result)\n\n    fitG<-fhc(D=data,min_increase = 0.02,gamma=10,save_model =F,nthread=3,topk=10)\n    term=data.frame(df[i,],indicators(fitG,G),type=\"nonlinear\",method=\"SELF\",topk=10)\n    result=rbind(result,term)\n    print(result)\n  }\n}\n",
    "created" : 1508243148923.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1516298241",
    "id" : "9DA30CF7",
    "lastKnownWriteTime" : 1496328135,
    "last_content_update" : 1508243523865,
    "path" : "~/zhengproj/R/Project/zheng_project/random_graph_self.R",
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled5"
    },
    "relative_order" : 16,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}